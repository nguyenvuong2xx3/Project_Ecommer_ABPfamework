@using Acme.SimpleTaskApp.Products;
@using Acme.SimpleTaskApp.Web.Models.Products
@using static Acme.SimpleTaskApp.Products.Product
@model Acme.SimpleTaskApp.Web.Models.Products.ProductViewModel

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/Layout/Customer/_LayoutCustomer.cshtml";
}

@section scripts
{
	<environment names="Development">
		<script src="~/view-resources/Views/HomeCustomer/mainCustomer.js" asp-append-version="true"></script>
		<script src="~/view-resources/Views/Carts/index.js" asp-append-version="true"></script>
		<link href="~/css/style.css" rel="stylesheet" />

	</environment>
}
@await Html.PartialAsync("~/Views/Shared/Layout/Customer/_SliderCustomer.cshtml")

<div class="container mt-4" style="width: 1120px; margin: 0 auto;">
	<h3 style="padding-bottom: 25px;">Tất cả sản phẩm</h3>
	<div class="row row-cols-6 g-3 d-flex flex-wrap">
		@foreach (var product in Model.Products)
		{
			<div class="col" style="width: 183px; margin-top: 0; padding-bottom: 10px;">
				<div class="card product-click-detail" data-id="@product.Id">
					@if (@product.Image != "")
					{
						<img src="@product.Image" class="card-img-top" alt="@product.Name" style="width: auto; height: auto;">
					}
					else
					{
						<img src="~/img/products/default.png" class="card-img-top" alt="@product.Name" style="width: auto; height: auto;">
					}
					<div class="card-body">
						<h5 class="card-name">@product.Name</h5>
						<div class="product-price">
							<h5 class="current-price">@product.Price.ToString("#,##0")₫</h5>
							<div class="old-price">
								<h5 class="strikethrough">2.990.000₫</h5>
								<span class="discount" style="color: #ff0000;">-13%</span>
							</div>
						</div>
						<div class="stock-status">
							@if (product.State == ProductState.Available)
							{
								<span class="text-success">Còn hàng</span>
							}
							else
							{
								<span class="text-danger">Hết hàng</span>
							}
						</div>
					</div>
					<button class="detail-btn product-click-detail" data-id="@product.Id">
						Xem chi tiết
					</button>
				</div>
			</div>
		}
	</div>
</div>

<style>
	/* Main container styling */
	.customeContrainer{
		padding-left: 59px !important;
	}
	.container {
		font-family: 'Roboto', Arial, sans-serif;
		max-width: 1200px;
		margin: 0 auto;
		padding: 20px;
	}

	h3 {
		font-size: 24px;
		font-weight: 700;
		color: #444;
		margin-bottom: 20px;
		text-transform: uppercase;
		border-bottom: 1px solid #eee;
		padding-bottom: 15px;
	}

	/* Product grid layout */
	.row {
		display: flex;
		flex-wrap: wrap;
		margin: 0 -10px;
	}

	.col {
		padding: 0 10px;
		margin-bottom: 20px;
	}

	/* Product card styling */
	.card {
		border: 1px solid #e1e1e1;
		border-radius: 8px;
		overflow: hidden;
		transition: all 0.3s ease;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

		.card:hover {
			box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
			transform: translateY(-5px);
			border-color: #288ad6;
		}

	.card-img-top {
		width: 100%;
		height: 180px;
		object-fit: contain;
		padding: 15px;
		background: #fff;
		border-bottom: 1px solid #f3f3f3;
	}

	.card-body {
		padding: 15px;
		flex-grow: 1;
	}

	.card-name {
		font-size: 14px;
		font-weight: 400;
		color: #444;
		height: 40px;
		overflow: hidden;
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		margin-bottom: 10px;
		line-height: 1.4;
	}

	/* Price styling */
	.product-price {
		margin-bottom: 10px;
	}

	.current-price {
		font-size: 16px;
		font-weight: 700;
		color: #d0021b;
		margin-bottom: 5px;
	}

	.old-price {
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.strikethrough {
		font-size: 14px;
		color: #888;
		text-decoration: line-through;
		margin: 0;
	}

	.discount {
		font-size: 12px;
		font-weight: 700;
		background: #f6f6f6;
		padding: 2px 5px;
		border-radius: 4px;
	}

	/* Stock status */
	.stock-status {
		font-size: 13px;
		margin-bottom: 10px;
	}

	.text-success {
		color: #288ad6;
	}

	.text-danger {
		color: #d0021b;
	}

	/* Button styling */
	.detail-btn {
		background: #288ad6;
		color: white;
		border: none;
		padding: 10px;
		width: 100%;
		font-size: 14px;
		font-weight: 500;
		cursor: pointer;
		transition: background 0.3s;
		margin-top: auto;
	}

		.detail-btn:hover {
			background: #1a7bc8;
		}


	.card-img-top {
		height: 150px;
	}

</style>
<nav aria-label="Page navigation example" class="mt-4 d-flex justify-content-center">
	<ul class="pagination">
		<li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
			<a class="page-link" asp-action="Index" asp-route-page="1" aria-label="First">
				<span aria-hidden="true">&laquo;&laquo;</span>
			</a>
		</li>
		<li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
			<a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" aria-label="Previous">
				<span aria-hidden="true">&laquo;</span>
			</a>
		</li>

		@for (int i = 1; i <= Model.TotalPages; i++)
		{
			<li class="page-item @(i == Model.PageNumber ? "active" : "")">
				<a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
			</li>
		}

		<li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
			<a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" aria-label="Next">
				<span aria-hidden="true">&raquo;</span>
			</a>
		</li>
		<li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
			<a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" aria-label="Last">
				<span aria-hidden="true">&raquo;&raquo;</span>
			</a>
		</li>
	</ul>
</nav>



@* @await Component.InvokeAsync("ProductList") *@


@await Component.InvokeAsync("ProductList", new { viewName = "ProductListCategoryIndex" })

